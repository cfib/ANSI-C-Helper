[[stdarg]]
stdarg
------

NAME::
stdarg - variable argument lists.

SYNOPSIS::

[source,c]
---------------------
#include <stdarg.h>

void va_start( va_list ap, last);type va_arg( va_list ap, type);void va_end( va_list ap);
---------------------

DESCRIPTION::

A function may be called with a varying number of
arguments of varying types. The include file +stdarg.h+ declares a
type +va_list+ and defines three macros for stepping through a list
of arguments whose number and types are not known to the called
function.

The called function must declare an object of type +va_list+ which is
used by the macros +va_start+, +va_arg+, and +va_end+.

The +va_start+ macro initializes +ap+ for subsequent use by +va_arg+ and
+va_end+, and must be called first.

The parameter last is the name of the last parameter before the
variable argument list, i.e., the last parameter of which the
calling function knows the type.

Because the address of this parameter is used in the +va_start+
macro, it should not be declared as a register variable, or as a
function or an array type.

The +va_arg+ macro expands to an expression that has the type and
value of the next argument in the call. The parameter +ap+ is the
+va_list+ +ap+ initialized by +va_start+. Each call to +va_arg+ modifies +ap+
so that the next call returns the next argument. The parameter type
is a type name specified so that the type of a pointer to an object
that has the specified type can be obtained simply by adding a `*` to
type.

If there is no next argument, or if type is not compatible with the
type of the actual next argument (as promoted according to the
default argument promotions), random errors will occur.

The first use of the +va_arg+ macro after that of the +va_start+ macro
returns the argument after last. Successive invocations return the
values of the remaining arguments.

The +va_end+ macro handles a normal return from the function whose
variable argument list was initialized by +va_start+.

RETURN VALUE::

Neither the +va_start+ macro nor the +va_end+ macro return a value.

EXAMPLE::

[source,c]
---------------------
include::src/stdarg.c[]
---------------------

OUTPUT::

.....
$ gcc -Wall stdarg.c
$ ./a.out 
The sum of 10+15+13 is 38.
.....

EXAMPLE::

The function foo takes a string of format characters and prints out the argument associated with each format character based on the type.

[source,c]
---------------------
include::src/stdarg2.c[]
---------------------


EXAMPLE::

[source,c]
---------------------
include::src/stdarg3.c[]
---------------------

OUTPUT::

.....
$ gcc -Wall stdarg3.c
$ ./a.out 
pear found
.....



