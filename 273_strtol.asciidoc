[[strtol]]
strtol
------

NAME::
strtol - Convert string to a long integer.

SYNOPSIS::

[source,c]
---------------------
#include <stdlib.h>

long strtol(const char * string, char** endptr, int radix); 
---------------------

DESCRIPTION::

Parses string interpreting its content as an integer value until a character that can not be interpreted is found, and returns a long int value.

PARAMETERS::

* string - String representing an integer number. The number is considered until a non-numeric character is found (only the digits from 0 to radix-1 are considered valid numeric characters, signs are considered valid numeric characters for this parameter). The format used is: +
`[whitespaces][+|-][0|0x][nnnnn]` + 
(where whitespaces are any tab or space character and +nnnnn+ is a sequence of valid numbers following the specified radix)
* endptr - Address of a pointer. This is filled by the function with the address where scan has ended. Serves to determine where there is the first non-numerical character in the string.
* radix - Numeral radix in which the number to be interpreted. Must be 0 or be between 2 and 36. If it is 0 the radix of the string is determined by the initial characters of the string:


[options="header",frame="all",colspecs="cl",cols="^2,10",caption_voffset="0mm"]
|=================================================
| initial chars     | Interpreted by strol as
| 0x                | hexadecimal: radix 16
| 0                 | octal: radix 8
| [1-9]             | decimal: radix 10
|=================================================


RETURN VALUE::

The converted long int value from the input string. If conversion would cause overflow the result is +LONG_MAX+ or +LONG_MIN+. If an error occurs or no conversion can be made 0 is returned.

SEE ALSO::

+atof+, +strtod+, +strtol+

EXAMPLE::

[source,c]
---------------------
include::src/strtoul.c[]
---------------------

OUTPUT::
.....
Enter an integer value: 1234567890 
Value entered: 1234567890. Its double: 2469135780
.....


EXAMPLE::
[source,c]
---------------------
include::src/strtol2.c[]
---------------------

OUTPUT::

.....
$ gcc -Wall strtol2.c
$ ./a.out 
13(Oct) is 11(Dec)
13(Dec) is 13(Dec)
13(hex) is 19(Dec)
----------------------------------
13hzcd(Oct) is 11(Dec)
13hzcd(Dec) is 13(Dec)
13hzcd(hex) is 19(Dec)
----------------------------------
hzcd(Oct) is 0(Dec)
hzcd(Dec) is 0(Dec)
hzcd(hex) is 0(Dec)
----------------------------------
13 is 13(Dec)
013 is 11(Dec)
0x13 is 19(Dec)
.....


