[[toupper]]
toupper
-------


NAME::
tolower - convert a character to its upper-case pendant.

SYNOPSIS::

[source,c]
---------------------
#include <ctype.h>

int toupper (int c);
---------------------

DESCRIPTION::

The +toupper+ function converts +c+ to an uppercase character. If +c+ is not an alphabetic
letter, the +toupper+ function has no effect.

RETURN VALUE::
The +toupper+ function returns the uppercase equivalent of +c+.

SEE ALSO::

+tolower+

["NOTE", voffset="0mm"]
The details of what constitutes an uppercase or lowercase letter depend on the current locale. For example, the default "C" locale does not know about "umlauts", so no conversion is done for them. +
In some non - English locales, there are lowercase letters with no corresponding uppercase equivalent; the German "sharp s" is one example.

EXAMPLE::

[source,c]
---------------------
include::src/toupper.c[]
---------------------

OUTPUT::
.....
$ gcc -Wall toupper.c
$ ./a.out 
toupper(_) = _
toupper(`) = `
toupper(a) = A
toupper(b) = B
.....


VARIANT _toupper
~~~~~~~~~~~~~~~~

.....
#define _toupper(c) ((c) - 'a' + 'A')
.....

DESCRIPTION::

The above +_toupper+ macro is a simpler version of +toupper+ that can be used when c is known to be a
lowercase character.

RETURN VALUE::

The +_toupper+ macro returns an uppercase character.

EXAMPLE::

[source,c]
---------------------
include::src/toupper2.c[]
---------------------

OUTPUT::
.....
$ gcc -Wall toupper2.c
$ ./a.out 
aA
.....



